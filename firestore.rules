
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(companyId) {
      return request.auth.token.companyId == companyId && request.auth.token.role == 'Company';
    }

    function isBranchMember(companyId) {
      return request.auth.token.companyId == companyId && request.auth.token.role == 'Branch';
    }

    function isAdmin() {
      return request.auth.token.role == 'Admin';
    }

    // Rules for the 'companies' collection
    match /companies/{companyId} {
      // Admins can read company details for licensing purposes.
      // Company owners can read their own company document.
      allow get: if isAdmin() || isOwner(companyId);
      
      // Only Admins can create or update company records.
      allow write: if isAdmin();

      // Rules for 'branches' sub-collection
      match /branches/{branchId} {
        // Company owners and branch members can read branch data.
        allow get, list: if isOwner(companyId) || isBranchMember(companyId);
        // Only company owners can create/update/delete branches.
        allow write: if isOwner(companyId);
      }

      // Rules for 'employees' sub-collection
      match /employees/{employeeId} {
        // Company owners can manage all employees in their company.
        allow get, list, write: if isOwner(companyId);
      }
      
      // Rules for company-wide operational data
      match /bookings/{bookingId} {
        // Company owners can manage all bookings. Branch members can read them.
        allow get, list: if isOwner(companyId) || isBranchMember(companyId);
        allow write: if isOwner(companyId);
      }

      match /vehicles/{vehicleId} {
          // Company owners can manage all vehicles. Branch members can view them.
          allow get, list: if isOwner(companyId) || isBranchMember(companyId);
          allow write: if isOwner(companyId);
      }

      // Rules for branch-specific operational data
      match /branches/{branchId}/bookings/{bookingId} {
          // A branch member can only access bookings within their assigned branch
          allow read, write: if isBranchMember(companyId) && request.auth.token.branchId == branchId;
          // A company owner can read bookings from any of their branches
          allow read: if isOwner(companyId);
      }
    }
  }
}
